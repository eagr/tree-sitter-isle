{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "isle",
  "word": "ident",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_def"
      }
    },
    "_def": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "pragma"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "decl"
        },
        {
          "type": "SYMBOL",
          "name": "rule"
        },
        {
          "type": "SYMBOL",
          "name": "extractor"
        },
        {
          "type": "SYMBOL",
          "name": "extern"
        },
        {
          "type": "SYMBOL",
          "name": "convert"
        }
      ]
    },
    "ty": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "ident"
      },
      "named": true,
      "value": "ty"
    },
    "ident": {
      "type": "PATTERN",
      "value": "[^\\s\\(\\);0-9-][^\\s\\(\\);@]*"
    },
    "const_ident": {
      "type": "PATTERN",
      "value": "\\$[^\\s\\(\\);@]*"
    },
    "int": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "-?[0-9_]+"
        },
        {
          "type": "PATTERN",
          "value": "-?0[xX][0-9A-Fa-f_]+"
        },
        {
          "type": "PATTERN",
          "value": "-?0[oO][0-7_]+"
        },
        {
          "type": "PATTERN",
          "value": "-?0[bB][01_]+"
        }
      ]
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "wildcard": {
      "type": "STRING",
      "value": "_"
    },
    "if_let": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "if-let"
        },
        {
          "type": "SYMBOL",
          "name": "_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "if": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "let": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "FIELD",
          "name": "bindings",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "("
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "let_binding"
                }
              },
              {
                "type": "STRING",
                "value": ")"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "_expr"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "let_binding": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "ty"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "int"
        },
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "const_ident"
        },
        {
          "type": "SYMBOL",
          "name": "wildcard"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "STRING",
              "value": "@"
            },
            {
              "type": "SYMBOL",
              "name": "_pattern"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "STRING",
              "value": "and"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_pattern"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_pattern"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "int"
        },
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "const_ident"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "let"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_expr"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "pragma": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "pragma"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "type"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "modifiers",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "nodebug"
                  },
                  {
                    "type": "STRING",
                    "value": "extern"
                  }
                ]
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "primitive"
              },
              {
                "type": "SYMBOL",
                "name": "enum"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "primitive": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "primitive"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "enum": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "enum"
        },
        {
          "type": "FIELD",
          "name": "variants",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "enum_variant"
            }
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "enum_variant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "ident"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "enum_variant_field"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "enum_variant_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "ty"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "decl"
        },
        {
          "type": "FIELD",
          "name": "modifiers",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "pure"
                },
                {
                  "type": "STRING",
                  "value": "multi"
                },
                {
                  "type": "STRING",
                  "value": "partial"
                }
              ]
            }
          }
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "FIELD",
          "name": "params",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "("
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "ty"
                }
              },
              {
                "type": "STRING",
                "value": ")"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "ret",
          "content": {
            "type": "SYMBOL",
            "name": "ty"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "rule": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "rule"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "name",
                  "content": {
                    "type": "SYMBOL",
                    "name": "ident"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "priority",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_rule_priority"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "term",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_pattern"
                  }
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "priority",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_rule_priority"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "term",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_pattern"
                  }
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "name",
                  "content": {
                    "type": "SYMBOL",
                    "name": "ident"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "term",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_pattern"
                  }
                }
              ]
            },
            {
              "type": "FIELD",
              "name": "term",
              "content": {
                "type": "SYMBOL",
                "name": "_pattern"
              }
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "if_let"
              },
              {
                "type": "SYMBOL",
                "name": "if"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "rewrite",
          "content": {
            "type": "SYMBOL",
            "name": "_expr"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_rule_priority": {
      "type": "ALIAS",
      "content": {
        "type": "SYMBOL",
        "name": "int"
      },
      "named": false,
      "value": "_rule_priority"
    },
    "extractor": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "FIELD",
          "name": "params",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "ident"
            }
          }
        },
        {
          "type": "FIELD",
          "name": "ret",
          "content": {
            "type": "SYMBOL",
            "name": "_pattern"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "extern": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "extern"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_extern_constructor_decl"
            },
            {
              "type": "SYMBOL",
              "name": "_extern_extractor_decl"
            },
            {
              "type": "SYMBOL",
              "name": "_extern_const_decl"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_extern_constructor_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "constructor"
        },
        {
          "type": "FIELD",
          "name": "src_name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "FIELD",
          "name": "target_name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        }
      ]
    },
    "_extern_extractor_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "extractor"
        },
        {
          "type": "FIELD",
          "name": "modifiers",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "infallible"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "src_name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "FIELD",
          "name": "target_name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        }
      ]
    },
    "_extern_const_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "const"
        },
        {
          "type": "SYMBOL",
          "name": "const_ident"
        },
        {
          "type": "SYMBOL",
          "name": "ident"
        },
        {
          "type": "SYMBOL",
          "name": "ty"
        }
      ]
    },
    "convert": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "convert"
        },
        {
          "type": "FIELD",
          "name": "from",
          "content": {
            "type": "SYMBOL",
            "name": "ty"
          }
        },
        {
          "type": "FIELD",
          "name": "to",
          "content": {
            "type": "SYMBOL",
            "name": "ty"
          }
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "ident"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "comment": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "line_comment"
        },
        {
          "type": "SYMBOL",
          "name": "block_comment"
        }
      ]
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": ";"
          },
          {
            "type": "PATTERN",
            "value": "[^\\r\\n]*"
          }
        ]
      }
    },
    "block_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "(;"
          },
          {
            "type": "PATTERN",
            "value": "[^;]*;+([^\\(;][^;]*;+)*"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "[\\s\\uFEFF\\u2028\\u2029\\u2060\\u200B]"
    }
  ],
  "conflicts": [
    [
      "_pattern",
      "_rule_priority"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
